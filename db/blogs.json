{
    "blogs": [
        {
        "id": "blog1",
        "title": "Best First Day Ever!!!",
        "date": "02/12/2018",
        "post": "Boy, these first two weeks have made my brain hurt. The first week teased me by making me think I was ahead of the game. We went over html, replicated a static page, and discussed how we should go about completing these first projects. The latter being a helpful lesson that, while we will spend a lot of time coding, 80% of the initial work will be planning. After finishing CSS on Saturday, I still felt pretty confident in my abilities, however, my naivity has swiftly come back to bite me. The second week we really hit the ground running. Learning the ins, outs, and throughs of the command line, followed promptly by the basics of using git. I had some experience with the linux command line before, so it wasn't terribly indecipherable to figure out the commands on my macbook's terminal. Learning GitHub and how it interacts with git was where I ran into trouble. Understanding how these two work in conjunction with each other was my equivalent of learning theoretically physics. Time is a straight line (the local master continues on its own path), which can branch into multiple realities (creating a branch and making changes) but can then merge back into the parallel reality (the origin master). It sounds ridiculous, but it makes sense to me. And, hey, if it makes sense to me, I can't be doing too shabby, right?"
        },
        {
        "id": "blog2",
        "title": "JavaScript is great",
        "date": "02/23/2018",
        "post": "This week we were introduced to the wonders of JavaScript, which makes the web interactive and responsive! I didn't think I knew much JS or understood it at all, but after the first few challenges, I was feeling confident in my abilities. We only covered the basics (variables, arrays, and calling them), but I can safely say I am ready for more challenging material over the next week or two. <br> We "
        },
        {
        "id": "blog3",
        "title": "JavaScript is terrible",
        "date": "03/4/2018",
        "post": "This week, we covered iteration methods and using them to simplify code. We started off going over how everyone accomplished the challenges assigned from the previous week, which was eye opening just to see how many different ways you can accomplish a single task. Then, our instructor went over much simpler methods to use which accomplished the same tasks using a lot less code. At first, I was completely lost and confused about how any of it worked and this continued through the remainder of class. I went home feeling like I'd been pushed off the ledge into the murky depths of JS. After struggling all evening attempting to completely understand everything that had been presented, I decided to sleep on it and tackle it the next day. Praises to Treehouse and their amazingly helpful videos. I covered iteration methods and callback functions through Treehouses courses and practiced them repeatedly. It was really difficult to grasp certain concepts in the beginning, but eventually (after lots and lots of practice), I was able to move through problems utilizing JavaScript's multitude of methods and functions. More specifically, I had a really hard time conceptualizing the functionality of the forEach, map, and filter methods, which seemed counterintuitive initially. As I continued to use them, I found the more I wrote the code, the more it made sense. I will definitely remember that from here on out."
        },
        {
        "id": "blog4",
        "title": "ES6!!!",
        "date": "03/13/2018",
        "post": "This week we got to learn ES6, which is apparently the industry standard for using JavaScript. It has made writing the code a whole hell of a lot easier. We now know how to assign variables using different methods for their different uses, whether it will be reassigned later or not. I've found this to be a lot more intuitive than ES5 was, and a lot less frustrating to work with. We've gone further down the rabbit hole using functions and callbacks which seems to be simultaneously confusing and exciting. I think my favorite part this week, though, was learning markdown. It was pretty much a walk in the park in comparison to the other material we've been learning, so it was nice to have a breather."
        },
        {
        "id": "blog5",
        "title": "XHR is the devil",
        "date": "03/27/2018",
        "post": "So we 'learned' XHR this week. Not that I'm salty about it or anything... I just don't fully get it yet. But I'm going to. I guess I understand what it does conceptually, I just don't understand the syntax. Apparently it's okay for us to feel uncomfortable with the syntax, but it'd be nice to get it. And I really want to utilize this newfound skill to the fullest because it seems very handy. I'm glad we're starting to use 'databases' for content, though, because storing data in the js file itself has felt very silly and unnecessary. I'm thinking this might be the first step towards using databases instead of inline storage. Hopefully in the weeks to come, I'll have a better understanding of how it works. Fingers crossed. "
        },
        {
        "id": "blog6",
        "title": "Bootstrap and Superheroes",
        "date": "04/03/2018",
        "post": "Bootstrap was this week's topic of discussion and it was underwhelming. Initially, we spent a lot of time walking through the documentation and answering any questions anyone had about anything. It was very slow. This was how it went for most of the class, then, when we had about an hour left, we dove into a new JavaScript concept. And it went by very quickly. I kind of got lost in all the rushing and was really done by the time it was time to leave. Bootstrap was great to learn because I already had an idea of how it worked. Knowing that people have built a framework that has worked for thousands of other developers is comforting and having access to the catalogue of documentation for it makes it even better. I think Bootstrap is a great utility for throwing up a quick website in a pinch. But it also makes it possible to create beautifully designed sites as well."
        },
        {
        "id": "blog7",
        "title": "Task Runners and Broswerify",
        "date": "04/09/2018",
        "post": "This week's focus was on task runners, which apparently help programmers accomplish monotonous tasks by running them in the background. I still don't claim to fully understand everything about them, but I'll be doing more research in the next few days so I do. More specifically, though, we focused on Browserify and Grunt, two useful task runners if you like being policed by programs while you write code. Sounds fun right? Well, it's actually pretty cool because setting these two up in unison breeds an ideal file structure for collaborating with teams as well as an enhanced security mechanism. Broswerify allows us to have multiple files that all run through the same place, without the inherent vulnerabilities that are associated with a singular javascript file. It also drastically enhances productivity in regards to working with a team of developers. Instead of all working through different functions in the same file, we can have multiple files with each being dedicated to a specific task. This speeds up production time and decreases the number of conflicts that can occur. All in all, I think I will be seeing a lot more of these in the weeks to come."
        },
        {
        "id": "blog8",
        "title": "Decoding Convoluted Files and Functions",
        "date": "04/17/2018",
        "post": "After stepping up our game with task runners, this week's challenge was deciphering in-class projects in order to use the material covered in class. Mapping these files and functions has proven to be a beast in and of itself. Between untouched folders, multiple javascript files, and functions spread across files by functionality, it has been an overwhelming learning process. I've found that it no longer works to use the aforementioned review of inclass projects to get work done. Instead, I'm having to thoroughly review notes, start from square one, and move step by step through the project. Luckily, each one involves the same file structure, the only difference being the amount of javascript files and which file does what. I've definitely had to backtrack more than a few times to reevaluate what work has been done where. All in all, I think this process will become more intuitive the more I do it."
        },
        {
        "id": "blog9",
        "title": "Spider-Man and Chatty Folks",
        "date": "04/24/2018",
        "post": "So this week, the instructors split us up into groups based on perceived skill level. My group was one of the three groups in our class assigned with creating the framework for a basic message board. Our team took the liberty of assigning ourselves with a Spider-Man themed message board, while maintaining the brand we were assigned - pogonophobia. Luckily this time, the file structure was already prepared for us, so the real planning aspect consisted of what functions were to be assigned to what files and who would be working with each one. This, in turn, granted us a much smoother workflow and allowed us to be more creative with the design and UX of the site. <br> Given the ease of the planning section, working with this group has proven to be a much better experience than that of the past two groups; maybe because we're all on the same 'perceived' skill level, but also maybe because we all had an idea of how the group work should go. We've been working together on group projects and individual projects and the work we're doing seems quite a bit more productive. At the end of the day, I am enjoying the way group work is becoming less monotonous and more productive."
        },
        {
        "id": "blog10",
        "title": "jQuery and Its Library of Fantastic Utilities",
        "date": "05/01/18",
        "post": "So... Why have we not been using jQuery thus far?? I know, I know, we need to know the basics of JavaScript before moving up to more advanced libraries, but I am blown away by the power and simplicity of jQuery's extensive library. I definitely will be using this from here on out. But now that we've gotten to this point, I have a feeling we're going to move on very quickly. That which comes easy seems to go just as fast. That's alright, though, because I think this will make accomplishing specific tasks much easier for future assignments. <br> Shout out to John Resig for making coding 10x easier for generations to come. We'll see where we go from here. I'd like to spend some more time delving into the jQuery docs to see what awesome stuff is made easily possible through the library, but I'm willing to bet we're going to move in a new direction next week. Regardless, I will continue to research the libraries and try to find new ways to accomplish tasks with it."
        },
        {
        "id": "blog11",
        "title": "Promises and How to Break Them",
        "date": "05/15/18",
        "post": "This week's topic of focus was Promises and let me just tell you I was completely lost when the instructors explained them. By the end of Tuesday, I felt like I had just taken a class in Latin. I understand the concept, but the syntax was very foreign. As far as I can tell, this basically just replaces the XHR calls we've been making in previous projects. And we only just learned how to do them in jQuery, so things seem to be moving rather quickly, which means I should probably pick up my pace. <br> I've only broken them a handful of times so far, but it looks like I'm going to be needing some practice writing them out from scratch. "
        },
        {
        "id": "blog12",
        "title": "How APIs Saved Christmas",
        "date": "05/22/18",
        "post": "So I've used APIs before with WordPress before and they were not the most fun to use (they require plugins and extensive knowledge of the documentation in order to fully utilize it). Now, I realize that reading of documentation is necessary to use anything to its fullest extent, but at least using the API in your code allows you to pick and choose exactly what you need in order to display information how you want. The downfalls of just using a plugin start with the lack of control you (as a developer) have when designing the site and end with providing false information - and everything in between. Needless to say, using API's the way they were meant to be used - accessing the data with actual code - is a much more pleasant experience all around. <br> After covering all the material we need in order to utilize APIs during class, something clicked for me with the previous assignments. I found myself writing Promises and jQuery methods properly, which felt great considering my complete lack of understanding during last week's lesson. But I'm glad it has finally come to start making sense!"
        },
        {
        "id": "blog13",
        "title": "Firebase and You",
        "date": "05/29/18",
        "post": "Initially, I figured Firebase configurations would be extremely difficult, but to my surprise, they have turned out to be only very difficult! Luckily, though, our movie history app being created in class has only utilized Firebase with the plainest of JS. So it has been much more intuitive than it could have been. My only concern with Firebase is the limitations it has. After asking the instructor, she had mentioned it has a LOT of limitations (especially when only using the free version)so that means I'll need to do some research if I intend to use it for some serious applications, but I suppose I shouldn't concern myself with such lofty goals as of yet. I'm sure that, like all the previous lessons and obstacles I've tackled, understanding Firebase will come with time spent working with it. <br> All things considered, I found it really cool that Google would host such a useful utility for developers. I mean, with the project-specific databases for storage of user info, credentials, and other information, it leaves the web dev community with less backend work to worry about and allows them to focus solely on the frontend design and application. So many thanks, Google!"
        }
    ]
}